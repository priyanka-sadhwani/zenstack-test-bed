"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_UC6PZ63N_exports = {};
__export(chunk_UC6PZ63N_exports, {
  prismaSchemaWasm: () => import_prisma_schema_wasm.default,
  prismaSchemaWasmVersion: () => prismaSchemaWasmVersion,
  schemaEngineWasmVersion: () => schemaEngineWasmVersion,
  wasm_exports: () => wasm_exports
});
module.exports = __toCommonJS(chunk_UC6PZ63N_exports);
var import_chunk_GVULJTXS = require("./chunk-GVULJTXS.js");
var import_chunk_WXRVYSYN = require("./chunk-WXRVYSYN.js");
var import_chunk_4VNS5WPM = require("./chunk-4VNS5WPM.js");
var import_prisma_schema_wasm = __toESM(require("@prisma/prisma-schema-wasm"));
var wasm_exports = {};
(0, import_chunk_4VNS5WPM.__export)(wasm_exports, {
  prismaSchemaWasm: () => import_prisma_schema_wasm.default,
  prismaSchemaWasmVersion: () => prismaSchemaWasmVersion,
  schemaEngineWasmVersion: () => schemaEngineWasmVersion
});
var globalWithPanicRegistry = globalThis;
globalWithPanicRegistry.PRISMA_WASM_PANIC_REGISTRY = new import_chunk_WXRVYSYN.WasmPanicRegistry();
var { dependencies } = (0, import_chunk_GVULJTXS.require_package)();
var prismaSchemaWasmVersion = dependencies["@prisma/prisma-schema-wasm"];
var schemaEngineWasmVersion = dependencies["@prisma/schema-engine-wasm"];
