import { PluginGlobalOptions, PluginOptions } from '@zenstackhq/sdk';
import { Model } from '@zenstackhq/sdk/ast';
import { type DMMF } from '@zenstackhq/sdk/prisma';
export declare class ZodSchemaGenerator {
    private readonly model;
    private readonly options;
    private readonly dmmf;
    private readonly sourceFiles;
    private readonly globalOptions;
    private readonly mode;
    constructor(model: Model, options: PluginOptions, dmmf: DMMF.Document, globalOptions: PluginGlobalOptions | undefined);
    generate(): Promise<void>;
    private get project();
    private getExcludedModels;
    private generateCommonSchemas;
    private generateEnumSchemas;
    private generateObjectSchemas;
    private generateModelSchemas;
    private generateTypeDefSchema;
    private addPreludeAndImports;
    private generateModelSchema;
    private createModelBaseSchema;
    private createRefineFunction;
    private makeValidationRefinements;
    private makePartial;
    private makeOmit;
    private makeMerge;
    private makePassthrough;
}
export declare function computePrismaClientImport(importingFrom: string, options: PluginOptions): string;
