"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidationAttribute = isValidationAttribute;
exports.hasValidationAttributes = hasValidationAttributes;
const ast_1 = require("./ast");
function isValidationAttribute(attr) {
    var _a;
    return (_a = attr.decl.ref) === null || _a === void 0 ? void 0 : _a.attributes.some((attr) => attr.decl.$refText === '@@@validation');
}
/**
 * Returns if the given model contains any data validation rules (both at the model
 * level and at the field level).
 */
function hasValidationAttributes(decl, seen = new Set()) {
    if (seen.has(decl)) {
        return false;
    }
    seen.add(decl);
    if ((0, ast_1.isDataModel)(decl)) {
        if (decl.attributes.some((attr) => isValidationAttribute(attr))) {
            return true;
        }
    }
    if (decl.fields.some((field) => {
        var _a, _b;
        if ((0, ast_1.isTypeDef)((_a = field.type.reference) === null || _a === void 0 ? void 0 : _a.ref)) {
            return hasValidationAttributes((_b = field.type.reference) === null || _b === void 0 ? void 0 : _b.ref, seen);
        }
        else {
            return field.attributes.some((attr) => isValidationAttribute(attr));
        }
    })) {
        return true;
    }
    return false;
}
//# sourceMappingURL=validation.js.map