/**
 * A smarter version of `z.union` that decide which candidate to use based on how few unrecognized keys it has.
 *
 * The helper is used to deal with ambiguity in union generated for Prisma inputs when the zod schemas are configured
 * to run in "strip" object parsing mode. Since "strip" automatically drops unrecognized keys, it may result in
 * accidentally matching a less-ideal schema candidate.
 *
 * The helper uses a custom schema to find the candidate that results in the fewest unrecognized keys when parsing the data.
 *
 * The function uses `any` for parameter and return type to be compatible with various zod versions.
 */
export declare function smartUnion(z: any, candidates: any[]): any;
