import { CompilerOptions, Project, SourceFile } from 'ts-morph';
/**
 * Creates a TS code generation project
 */
export declare function createProject(options?: CompilerOptions): Project;
export declare function saveSourceFile(sourceFile: SourceFile): void;
/**
 * Persists a TS project to disk.
 */
export declare function saveProject(project: Project): Promise<void>;
/**
 * Emit a TS project to JS files.
 */
export declare function emitProject(project: Project): Promise<void>;
export interface CodeWriter {
    block(callback: () => void): void;
    inlineBlock(callback: () => void): void;
    write(text: string): void;
    writeLine(text: string): void;
    conditionalWrite(condition: boolean, text: string): void;
}
/**
 * A fast code writer.
 */
export declare class FastWriter implements CodeWriter {
    private readonly indentSize;
    private content;
    private indentLevel;
    constructor(indentSize?: number);
    get result(): string;
    block(callback: () => void): void;
    inlineBlock(callback: () => void): void;
    write(text: string): void;
    writeLine(text: string): void;
    conditionalWrite(condition: boolean, text: string): void;
    private indent;
}
